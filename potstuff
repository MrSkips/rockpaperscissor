import sys
import requests
from PyQt5.QtCore import Qt, QTimer, QUrl
from PyQt5.QtGui import QPixmap, QPalette, QBrush
from PyQt5.QtWidgets import QApplication, QWidget, QVBoxLayout, QHBoxLayout, QLabel


class NewsDisplayWindow(QWidget):
    def __init__(self, api_key):
        super().__init__()

        # set window properties
        self.setWindowTitle('Raspberry Pi News Display')
        self.setFixedSize(800, 480)

        # create layout
        self.layout = QVBoxLayout(self)
        self.layout.setContentsMargins(0, 0, 0, 0)

        # create news headline label
        self.news_headline_label = QLabel(self)
        self.news_headline_label.setStyleSheet('font-size: 24px; font-weight: bold; padding: 20px;')
        self.layout.addWidget(self.news_headline_label)

        # create image label
        self.image_label = QLabel(self)
        self.image_label.setFixedSize(500, 250)
        self.image_label.setAlignment(Qt.AlignCenter)
        self.layout.addWidget(self.image_label)

        # set background image
        image_url = 'https://images.unsplash.com/photo-1572276596237-4c78b3e7b9d0'
        image_data = requests.get(image_url).content
        image = QPixmap()
        image.loadFromData(image_data)
        palette = QPalette()
        palette.setBrush(QPalette.Background, QBrush(image))
        self.setPalette(palette)

        # set API key and create NewsApiClient object
        self.api_key = api_key
        self.newsapi = NewsApiClient(api_key=self.api_key)

        # initialize news headline and image
        self.update_news()

        # set timer to update news headline and image every 15 seconds
        self.timer = QTimer(self)
        self.timer.timeout.connect(self.update_news)
        self.timer.start(15000)

    def update_news(self):
        # get top headlines from News API
        top_headlines = self.newsapi.get_top_headlines(language='en')

        # get first headline and image
        headline = top_headlines['articles'][0]['title']
        image_url = top_headlines['articles'][0]['urlToImage']

        # set news headline label text
        self.news_headline_label.setText(headline)

        # load image from URL and display in image label
        if image_url:
            image_data = requests.get(image_url).content
            image = QPixmap()
            image.loadFromData(image_data)
            self.image_label.setPixmap(image)


if __name__ == '__main__':
    # create QApplication object
    app = QApplication(sys.argv)

    # create NewsDisplayWindow object and show it
    window = NewsDisplayWindow(api_key='be3eab53efa44749943bb924a49fca24')
    window.show()

    # run event loop
    sys.exit(app.exec_())
